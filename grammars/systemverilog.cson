scopeName: 'source.systemverilog'
name: 'SystemVerilog'
fileTypes: ['v', 'sv', 'vh', 'svh']

patterns: [
  {
    include: '#comments'
  }
  {
    include: '#strings'
  }
  {
    include: '#compiler_directives'
  }
  {
    include: '#numbers'
  }
  {
    include: '#module_blocks'
  }
  {
    include: '#package_blocks'
  }
  {
    include: '#interface_blocks'
  }
  {
    include: '#config_blocks'
  }
  {
    include: '#udp_blocks'
  }
  {
    include: '#color_test'
  }
  {
    include: '#operators'
  }
]
repository:
  comments:
    patterns: [
      {
        begin: '/\\*'
        beginCaptures:
          '0':
            name: 'punctuation.definition.comment.begin.systemverilog'
        end: '\\*/'
        endCaptures:
          '0':
            name: 'punctuation.definition.comment.end.systemverilog'
        name: 'comment.block.systemverilog'
        patterns: [
            {
              match: '(?<=/\\*)\\s*(synopsys|ambid|synthesis)\\b'
              name: 'keyword.other.directive.tool.systemverilog'
            }
            {
              match: '/\\*'
              name: 'invalid.illegal.nested-block.comment.systemverilog'
            }
        ]
      }
      {
        match: '\\*/'
        name: 'invalid.illegal.stray-end.comment.systemverilog'
      }
      {
        begin: '//'
        beginCaptures:
          '0':
            name: 'punctuation.definition.comment.systemverilog'
        end: '$'
        name: 'comment.line.double-slash.systemverilog'
        patterns: [
          {
            match: '(?<=//)\\s*(synopsys|ambid|synthesis)\\b'
            name: 'keyword.other.directive.tool.systemverilog'
          }
        ]
      }
    ]
  strings:
    patterns: [
      {
        begin: '"'
        beginCaptures:
          '0':
            name: 'punctuation.definition.string.begin.systemverilog'
        end: '"'
        endCaptures:
          '0':
            name: 'punctuation.definition.string.end.systemverilog'
        name: 'string.quoted.double.systemverilog'
        patterns: [
          {
            match: '(\\\\\\\\)*(\\\\.)(?=\\n)'
            captures:
              '1':
                name: 'constant.character.escape.systemverilog'
              '2':
                name: 'invalid.illegal.non-quote-end.string.systemverilog'
          }
          {
            match: '([^\\\\])(?=\\n)'
            captures:
              '1':
                name: 'invalid.illegal.non-quote-end.string.systemverilog'
          }
          {
            match: '''(?x)(\\\\ (
                \\\\             |
                [afntv"]         |
                [0-3]\\d{,2}     |
                x[a-fA-F0-9]{,2} )|%%)(?!\\n)
            '''
            name: 'constant.character.escape.systemverilog'
          }
          {
            match: '%(\\d+)?[bBcCdDeEfFgGhHlLmMoOpPsStTuUvVxXzZ](?!\\n)'
            name: 'constant.other.placeholder.systemverilog'
          }
          {
            match: '(%)(?!(\\d+)?[bBcCdDeEfFgGhHlLmMoOpPsStTuUvVxXzZ])'
            captures:
              '1':
                name: 'invalid.illegal.placeholder.systemverilog'
          }
          {
            match: '(\\\\)\\n'
            captures:
              '1':
                name: 'constant.character.escape.line-continuation.systemverilog'
          }
          {
            match: '\\\\.?'
            name: 'invalid.illegal.unknown-escape.systemverilog'
          }
        ]
      }
    ]
  numbers:
    patterns: [
      {
        match: '\\b[0-9][_0-9]*(\\.[0-9][_0-9]*)?[eE][+\\-]?[0-9][_0-9]*\\b'
        name: 'constant.numeric.real.float.systemverilog'
      }
      {
        match: '\\b[0-9][_0-9]*(\\.[0-9][_0-9]*)?(s|ms|us|ns|ps|fs)\\b'
        name: 'constant.numeric.time.systemverilog'
      }
      {
        match: '\\b1step\\b'
        name: 'constant.numeric.time.step.systemverilog'
      }
      {
        match: '(\\b[1-9][_0-9]*)?\\s*\'[sS]?[bB]\\s*[01xXzZ?][_01xXzZ?]*'
        name: 'constant.numeric.binary.integer.systemverilog'
      }
      {
        match: '(\\b[1-9][_0-9]*)?\\s*\'[sS]?[oO]\\s*[0-7xXzZ?][_0-7xXzZ?]*'
        name: 'constant.numeric.octal.integer.systemverilog'
      }
      {
        match: '(\\b[1-9][_0-9]*)?\\s*\'[sS]?[hH]\\s*[0-9a-fA-FxXzZ?][_0-9a-fA-FxXzZ?]*'
        name: 'constant.numeric.hex.integer.systemverilog'
      }
      {
        match: '(\\b[1-9][_0-9]*)?\\s*\'[sS]?[dD]\\s*([xX]+|[zZ]+|[0-9][_0-9]*)'
        name: 'constant.numeric.decimal.integer.based.systemverilog'
      }
      {
        match: '\\b[0-9][_0-9]*\\.[0-9][_0-9]*\\b'
        name: 'constant.numeric.real.fixed.systemverilog'
      }
      {
        match: '\\b[0-9][_0-9]*\\b'
        name: 'constant.numeric.decimal.integer.unbased.systemverilog'
      }
      {
        match: '\'[zZxX01]\\b'
        name: 'constant.numeric.unbased.unsized.systemverilog'
      }
    ]
  package_blocks:
    patterns: [
      {
        begin: '\\b(package)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.package.begin.systemverilog'
        end: '\\b(endpackage)\\b'
        endCaptures:
          '1':
            name: 'storage.type.package.end.systemverilog'
        name: 'meta.block.package.systemverilog'
        patterns: [
          {
            match: '(?<=package)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
            captures:
              '1':
                name: 'storage.modifier.lifetime.systemverilog'
              '2':
                name: 'entity.name.type.package.systemverilog'
          }
          {
            include: '#comments'
          }
          {
            include: '#strings'
          }
          {
            include: '#covergroup_blocks'
          }
          {
            include: '#task_blocks'
          }
          {
            include: '#function_blocks'
          }
          {
            include: '#checker_blocks'
          }
          {
            include: '#program_blocks'
          }
          {
            include: '#numbers'
          }
          {
            match: '\\b((end)?module|interface|package|specify)\\b'
            name: 'invalid.illegal.nested-block.systemverilog'
          }
          {
            include: '#keywords'
          }
          {
            include: '#operators'
          }
          # TODO: package body
        ]
      }
      {
        match: '(?<=endpackage)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.package.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  interface_blocks:
    patterns: [
      {
        begin: '\\b(interface)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.interface.begin.systemverilog'
        end: '\\b(endinterface)\\b'
        endCaptures:
          '1':
            name: 'storage.type.interface.end.systemverilog'
        name: 'meta.block.interface.systemverilog'
        patterns: [
          {
            match: '(?<=interface)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
            captures:
              '1':
                name: 'storage.modifier.lifetime.systemverilog'
              '2':
                name: 'entity.name.type.interface.systemverilog'
          }
          {
            include: '#covergroup_blocks'
          }
          # TODO: interface
        ]
      }
      {
        match: '(?<=endinterface)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.interface.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  module_blocks:
    patterns: [
      {
        begin: '\\b(macromodule|module)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))?'
        beginCaptures:
          '1':
            name: 'storage.type.module.begin.systemverilog'
          '2':
            name: 'storage.modifier.lifetime.systemverilog'
          '3':
            name: 'entity.name.type.module.systemverilog'
        end: '\\b(endmodule)\\b'
        endCaptures:
          '1':
            name: 'storage.type.module.end.systemverilog'
        name: 'meta.block.module.systemverilog'
        patterns: [
          {
            include: '#comments'
          }
          {
            include: '#strings'
          }
          {
            include: '#numbers'
          }
          {
            include: '#attribute'
          }
          {
            include: '#compiler_directives'
          }
          {
            include: '#system_fuctions_tasks'
          }
          {
            include: '#module_blocks'
          }
          {
            include: '#program_blocks'
          }
          {
            include: '#interface_blocks'
          }
          {
            include: '#specify_blocks'
          }
          {
            include: '#covergroup_blocks'
          }
          {
            include: '#keywords'
          }
          {
            include: '#operators'
          }
          # TODO: module
        ]
      }
      {
        match: '(?<=endmodule)\\b(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.module.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
      {
        include: '#extern_module_declarations'
      }
    ]
  program_blocks:
    patterns: [
      {
        begin: '\\b(program)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.program.begin.systemverilog'
        end: '\\b(endprogram)\\b'
        endCaptures:
          '1':
            name: 'storage.type.program.end.systemverilog'
        name: 'meta.block.program.systemverilog'
        patterns: [
          {
            match: '(?<=program)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
            captures:
              '1':
                name: 'storage.modifier.lifetime.systemverilog'
              '2':
                name: 'entity.name.type.program.systemverilog'
          }
          {
            include: '#covergroup_blocks'
          }
          # TODO: program
        ]
      }
      {
        match: '(?<=endprogram)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.program.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  config_blocks:
    patterns: [
      {
        begin: '\\b(config)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.config.begin.systemverilog'
        end: '\\b(endconfig)\\b'
        endCaptures:
          '1':
            name: 'storage.type.config.end.systemverilog'
        name: 'meta.block.config.systemverilog'
        patterns: [
          {
            match: '(?<=config)\\s+((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
            captures:
              '1':
                name: 'entity.name.type.config.systemverilog'
          }
          {
            include: '#comments'
          }
          {
            match: '\\bconfig\\b'
            name: 'keyword.other.use-config.systemverilog'
          }
          {
            match: '\\b((end)?case|module|interface|package|specify|task|class|clocking|table|program)|(begin|end)\\b'
            name: 'invalid.illegal.nested-block.systemverilog'
          }
          {
            include: '#keywords'
          }
          {
            include: '#numbers'
          }
          # TODO: library
        ]
      }
      {
        match: '(?<=endconfig)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.config.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  specify_blocks:
    patterns: [
      {
        begin: '\\b(specify)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.specify.begin.systemverilog'
        end: '\\b(endspecify)\\b'
        endCaptures:
          '1':
            name: 'storage.type.specify.end.systemverilog'
        name: 'meta.block.specify.systemverilog'
        patterns: [
          {
            include: '#comments'
          }
          {
            include: '#numbers'
          }
          {
            match: '\\b((end)?case|module|interface|function|package|specify|task|class|clocking|table|program)|(begin|end)\\b'
            name: 'invalid.illegal.nested-block.systemverilog'
          }
          {
            match: '(\\$(setup|hold|setuphold|recovery|removal|recrem|skew|timeskew|fullskew|period|width|nochange))\\b'
            name: 'support.function.timing-check.specify.systemverilog'
          }
          {
            include: '#keywords'
          }
        ]
      }
    ]
  function_blocks:
    patterns: [
      {
        begin: '\\b(function)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.subroutine-function.begin.systemverilog'
        end: '\\b(endfunction)\\b'
        endCaptures:
          '1':
            name: 'storage.type.subroutine-function.end.systemverilog'
        name: 'meta.block.subroutine-function.systemverilog'
        patterns: [
          # {
          #   #TODO: function declarations
          #   match: '(?<=function)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
          #   captures:
          #     '1':
          #       name: 'storage.modifier.lifetime.systemverilog'
          #     '2':
          #       name: 'entity.name.type.subroutine-function.systemverilog'
          # }
          {
            #TODO: function declarations
            begin: '(?<=function)\\s+(?:(automatic|static)\\s+)?'
            beginCaptures:
              '1':
                name: 'storage.modifier.lifetime.systemverilog'
            end: '((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))\\s*(?=;|\\()'
            endCaptures:
              '1':
                name: 'entity.name.type.subroutine-function.systemverilog'
            name: 'meta.subroutine-function.declaration.systemverilog'
            patterns: [
              {
                include: '#comments'
              }
              {
                include: '#keywords'
              }
              {
                include: '#numbers'
              }
            ]
          }
          {
            include: '#comments'
          }
          {
            include: '#strings'
          }
          {
            include: '#numbers'
          }
          {
            include: '#keywords'
          }
          {
            include: '#operators'
          }
          # TODO: function
        ]
      }
      {
        match: '(?<=endfunction)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.subroutine-function.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  covergroup_blocks:
    patterns: [
      {
        begin: '\\b(covergroup)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.covergroup.begin.systemverilog'
        end: '\\b(endgroup)\\b'
        endCaptures:
          '1':
            name: 'storage.type.covergroup.end.systemverilog'
        name: 'meta.block.covergroup.systemverilog'
        patterns: [
          {
            match: '(?<=covergroup)\\s+((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
            captures:
              '1':
                name: 'entity.name.type.covergroup.systemverilog'
          }
          {
            include: '#numbers'
          }
          {
            include: '#keywords'
          }
          {
            include: '#function_blocks'
          }
          {
            match: '\\b((end)?case|module|interface|package|specify|task|class|clocking|table|program)\\b'
            name: 'invalid.illegal.nested-block.systemverilog'
          }
          # TODO: covergroup
        ]
      }
      {
        match: '(?<=endgroup)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.covergroup.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  task_blocks:
    patterns: [
      {
        begin: '\\b(task)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.task.begin.systemverilog'
        end: '\\b(endtask)\\b'
        endCaptures:
          '1':
            name: 'storage.type.task.end.systemverilog'
        name: 'meta.block.task.systemverilog'
        patterns: [
          {
            match: '(?<=task)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
            captures:
              '1':
                name: 'storage.modifier.lifetime.systemverilog'
              '2':
                name: 'entity.name.type.task.systemverilog'
          }
          # TODO task
        ]
      }
      {
        match: '(?<=endtask)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.task.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  checker_blocks:
    patterns: [
      {
        begin: '\\b(checker)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.checker.begin.systemverilog'
        end: '\\b(endchecker)\\b'
        endCaptures:
          '1':
            name: 'storage.type.checker.end.systemverilog'
        name: 'meta.block.checker.systemverilog'
        patterns: [
          {
            match: '(?<=checker)\\s+((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
            captures:
              '1':
                name: 'entity.name.type.checker.systemverilog'
          }
          {
            include: '#comments'
          }
          {
            include: '#attribute'
          }
          {
            include: '#checker_blocks'
          }
          {
            match: '\\b((end)?module|interface|package|program)\\b'
            name: 'invalid.illegal.nested-block.systemverilog'
          }
          # TODO: checker
        ]
      }
      {
        match: '(?<=endchecker)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.checker.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  udp_blocks:
    patterns: [
      {
        begin: '\\b(primitive)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.udp.begin.systemverilog'
        end: '\\b(endprimitive)\\b'
        endCaptures:
          '1':
            name: 'storage.type.udp.end.systemverilog'
        name: 'meta.block.udp.systemverilog'
        patterns: [
          {
            match: '(?<=primitive)\\s+((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
            captures:
              '1':
                name: 'entity.name.type.udp.systemverilog'
          }
          {
            include: '#comments'
          }
          {
            include: '#numbers'
          }
          {
            include: '#table_blocks'
          }
          {
            include: '#keywords'
          }
        ]
      }
      {
        match: '(?<=endprimitive)(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*)))?\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '2':
            name: 'entity.name.type.udp.systemverilog'
          '3':
            name: 'invalid.illegal.tail.systemverilog'
      }
    ]
  extern_module_declarations:
    patterns: [
      {
        begin: '\\b(extern)\\b'
        beginCaptures:
          '1':
            name: 'keyword.other.extern.systemverilog'
        end: '\\b(module)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))?'
        endCaptures:
          '1':
            name: 'storage.type.extern.systemverilog'
          '2':
            name: 'storage.modifier.lifetime.systemverilog'
          '3':
            name: 'entity.name.type.module.systemverilog'
        name: 'meta.attribute.extern.systemverilog'
        patterns: [
          {
            include: '#comments'
          }
          {
            include: '#attribute'
          }
        ]
      }
      # {
      #   match: '(?<=module)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
      #   captures:
      #     '1':
      #       name: 'storage.modifier.lifetime.systemverilog'
      #     '2':
      #       name: 'entity.name.type.module.systemverilog'
      # }
    ]
  extern_interface_declarations:
    patterns: [
      {
        begin: '\\b(extern)\\b'
        beginCaptures:
          '1':
            name: 'keyword.other.extern.systemverilog'
        end: '\\b(interface)\\b'
        endCaptures:
          '1':
            name: 'storage.type.extern.systemverilog'
        name: 'meta.attribute.extern.systemverilog'
        patterns: [
          {
            include: '#comments'
          }
          {
            include: '#attribute'
          }
        ]
      }
      {
        match: '(?<=interface)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
        captures:
          '1':
            name: 'storage.modifier.lifetime.systemverilog'
          '2':
            name: 'entity.name.type.interface.systemverilog'
      }
    ]
  extern_program_declarations:
    patterns: [
      {
        begin: '\\b(extern)\\b'
        beginCaptures:
          '1':
            name: 'keyword.other.extern.systemverilog'
        end: '\\b(program)\\b'
        endCaptures:
          '1':
            name: 'storage.type.extern.systemverilog'
        name: 'meta.attribute.extern.systemverilog'
        patterns: [
          {
            include: '#comments'
          }
          {
            include: '#attribute'
          }
        ]
      }
      {
        match: '(?<=program)\\s+(?:(automatic|static)\\s+)?((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
        captures:
          '1':
            name: 'storage.modifier.lifetime.systemverilog'
          '2':
            name: 'entity.name.type.program.systemverilog'
      }
    ]
  extern_udp_declarations:
    patterns: [
      {
        begin: '\\b(extern)\\b'
        beginCaptures:
          '1':
            name: 'keyword.other.extern.systemverilog'
        end: '\\b(primitive)\\b'
        endCaptures:
          '1':
            name: 'storage.type.extern.systemverilog'
        name: 'meta.attribute.extern.systemverilog'
        patterns: [
          {
            include: '#comments'
          }
          {
            include: '#attribute'
          }
        ]
      }
      {
        match: '(?<=primitive)\\s+((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
        captures:
          '1':
            name: 'entity.name.type.primitive.systemverilog'
      }
    ]
  keywords:
    patterns: [
      {
        match: '\\b(begin)\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))\\s*(.*?)(?=\\s*(//|/\\*|$))'
        # match: '\\b(begin)\\b(?:\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))\\s*(.*?)(?=\\s*(//|/\\*|$)))?'
        captures:
          '1':
            name: 'keyword.other.begin.systemverilog'
          '2':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '3':
            name: 'entity.name.section.block-identifier.systemverilog'
          '4':
            name: 'invalid.illegal.tail.systemverilog'
      }
      {
        match: '\\b(end)\\s*(:)\\s*((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'keyword.other.end.systemverilog'
          '2':
            name: 'punctuation.definition.block-identifier.systemverilog'
          '3':
            name: 'entity.name.section.block-identifier.systemverilog'
          '4':
            name: 'invalid.illegal.tail.systemverilog'
      }
      {
        match: '\\b(begin|end)\\b'
        name: 'keyword.other.begin-end.systemverilog'
      }
      {
          match: '\\b(generate|endgenerate)\\b'
          name: 'keyword.other.block.generate.systemverilog'
      }
      {
          match: '\\b(case|endcase)\\b'
          name: 'keyword.other.block.generate.systemverilog'
      }
      {
        match: '\\b(byte|shortint|int|longint|integer|time|bit|logic|reg|shortreal|real|realtime|supply0|supply1|tri|triand|trior|trireg|tri0|tri1|uwire|wire|wand|wor)\\b'
        name: 'storage.type.variables.systemverilog'
      }
      {
        match: '\\b(struct|union|string|chandle|event|enum|void)\\b'
        name: 'storage.type.variables.systemverilog'
      }
      {
        match: '\\b(if|else|initial|final|for|repeat|do|while|foreach|always|always_ff|always_latch|always_comb)\\b'
        name: 'keyword.control.systemverilog'
      }
      {
        match: '\\b(automatic|static)\\b'
        name: 'storage.modifier.lifetime.systemverilog'
      }
      {
        match: '\\b(accept_on|alias|assert|assign|assume)\\b'
        name: 'keyword.other.a.systemverilog'
      }
      {
        match: '\\b(before|bind|bins|binsof|break)\\b'
        name: 'keyword.other.b.systemverilog'
      }
      {
        match: '\\b(cell|constraint|context|continue|cover|coverpoint|cross)\\b'
        name: 'keyword.other.c.systemverilog'
      }
      {
        match: '\\b(deassign|default|defparam|design|disable|dist)\\b'
        name: 'keyword.other.d.systemverilog'
      }
      {
        match: '\\b(edge|eventually|expect|export|extends)\\b'
        name: 'keyword.other.e.systemverilog'
      }
      {
        match: '\\b(first_match|force|forever)\\b'
        name: 'keyword.other.f.systemverilog'
      }
      {
        match: '\\b(genvar|global)\\b'
        name: 'keyword.other.g.systemverilog'
      }
      {
        match: '\\b(iff|ifnone|ignore_bins|illegal_bins|implies|import|input|inout|instance|interconnect|intersect)\\b'
        name: 'keyword.other.i.systemverilog'
      }
      {
        match: '\\b(let|liblist|library|local|localparam)\\b'
        name: 'keyword.other.l.systemverilog'
      }
      {
        match: '\\b(matches|modport)\\b'
        name: 'keyword.other.m.systemverilog'
      }
      {
        match: '\\b(negedge|nettype|new|nexttime|noshowcancelled)\\b'
        name: 'keyword.other.n.systemverilog'
      }
      {
        match: '\\b(output)\\b'
        name: 'keyword.other.o.systemverilog'
      }
      {
        match: '\\b(packed|parameter|posedge|priority|protected|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure)\\b'
        name: 'keyword.other.p.systemverilog'
      }
      {
        match: '\\b(rand|randc|randcase|randsequence|realtime|ref|reject_on|release|restrict|return)\\b'
        name: 'keyword.other.r.systemverilog'
      }
      {
        match: '\\b(s_always|s_eventually|s_until|s_untilwith|scalared|showcancelled|soft|solve|specparam|struct|super|sync_accept_on|sync_reject_on)\\b'
        name: 'keyword.other.s.systemverilog'
      }
      {
        match: '\\b(tagged|throughout|timeprecision|timeunit|type|typedef)\\b'
        name: 'keyword.other.t.systemverilog'
      }
      {
        match: '\\b(until|until_with|untyped|use)\\b'
        name: 'keyword.other.u.systemverilog'
      }
      {
        match: '\\b(wait|wait_order|wildcard|with|within)\\b'
        name: 'keyword.other.w.systemverilog'
      }
    ]
  attribute:
    patterns: [
      begin: '(\\(\\*)(?!\\s*\\))'
      beginCaptures:
        '1':
          name: 'punctuation.definition.attribute.begin.systemverilog'
      end: '(\\*\\))'
      endCaptures:
        '1':
          name: 'punctuation.definition.attribute.end.systemverilog'
      name: 'meta.attribute.systemverilog' # TODO
      patterns: [
        {
          include: '#comments'
        }
        {
          include: '#numbers'
        }
        {
          include: '#strings'
        }
      ]
    ]
  table_blocks:
    patterns: [
      {
        begin: '\\b(table)\\b'
        beginCaptures:
          '1':
            name: 'storage.type.table.begin.systemverilog'
        end: '\\b(endtable)\\b'
        endCaptures:
          '1':
            name: 'storage.type.table.end.systemverilog'
        name: 'meta.block.table.systemverilog'
        patterns: [
          {
            include: '#comments'
          }
          {
            match: '[01xXbB?bBrRfFpPnN*]'
            name: 'constant.numeric.table-symbol.udp.systemverilog'
          }
          {
            match: '(:)(?:\\s*(:))*'
            captures:
              '1':
                name: 'punctuation.separator.table-symbol.udp.systemverilog'
              '2':
                name: 'invalid.illegal.duplicate.udp.systemverilog'
          }
        ]
      }
    ]
  compiler_directives:
    patterns: [
      {
        match: '^\\s*(`resetall|`endif|`ifdef|`ifndef|`line|`nounconnected_drive|`pragma|`unconnected_drive|`undef|`undefineall|`include|`timescale|`default_nettype|`define|`else|`elsif|`end_keywords|`endcelldefine|`begin_keywords|`celldefine)\\b'
        captures:
          '1':
            name: 'keyword.other.directive.systemverilog'
      }
      {
        match: '`__(FILE|LINE)__\\b'
        name: 'keyword.other.directive.systemverilog'
      }
      {
        match: '^\\s*(`default_decay_time|`default_trireg_strength|`delay_mode_distributed|`delay_mode_path|`delay_mode_unit|`delay_mode_zero)\\b'
        captures:
          '1':
            name: 'keyword.other.directive.optional.systemverilog'
      }
      {
        match: '(?<=`include)\\s+(<)([a-zA-Z0-9_.]+)(\\>)\\s*(.*?)(?=\\s*(//|/\\*|$))'
        captures:
          '1':
            name: 'punctuation.section.angle_brackets.begin.systemverilog'
          '2':
            name: 'string.quoted.other.angle_brackets.systemverilog'
          '3':
            name: 'punctuation.section.angle_brackets.end.systemverilog'
          '4':
            name: 'invalid.illegal.include.systemverilog'
      }
      {
        match: '(?<=`timescale)\\s+(10{,2}\\s*(?:s|ms|us|ns|ps|fs))\\s*/\\s*(10{,2}\\s*(?:s|ms|us|ns|ps|fs))?'
        captures:
          '1':
            name: 'constant.numeric.time.timeunit.systemverilog'
          '2':
            name: 'constant.numeric.time.timeprecision.systemverilog'
      }
      {
        match: '^\\s*(?:\\S.*)(`define|`resetall|`endif|`ifdef|`ifndef|`line|`nounconnected_drive|`pragma|`unconnected_drive|`undef|`undefineall|`include|`timescale|`default_nettype|`else|`elsif|`end_keywords|`endcelldefine|`begin_keywords|`celldefine)\\b'
        captures:
          '1':
            name: 'invalid.deprecated.directive.in-line.systemverilog'
      }
      {
        match: '(?<=`default_decay_time)\\s+(infinite)?'
        name: 'constant.numeric.infinite.default_decay_time.systemverilog'
      }
      {
        begin: '(?<=`pragma)\\s+'
        end: '$|(?=//|/\\*)'
        name: 'meta.directive.pragma.systemverilog'
        patterns: [
          {
            include: '#comments'
          }
          {
            include: '#numbers'
          }
          {
            include: '#strings'
          }
        ]
      }
      {
        match: '(?<=`define)\\s+((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
        name: 'support.function.identifier.defined-macro.systemverilog'
      }
      {
        match: '`((?:[a-zA-Z_][a-zA-Z0-9_$]*)|(?:\\\\\\S*))'
        name: 'support.function.identifier.defined-macro.systemverilog'
        # TODO: macro color
      }
    ]
  system_fuctions_tasks:
    patterns: [
      {
        match: '\\$(countdrivers|getpattern|incsave|input|key|list|log|nokey|nolog|reset|reset_count|reset_value|restart|save|scale|scope|showscopes|showvars|sreadmemb|sreadmemh)\\b'
        name: 'support.function.system-fuctions-tasks.optional.systemverilog'
      }
      {
        match: '\\$(finish|stop|exit|realtime|stime|time)\\b'
        name: 'support.function.system-fuctions-tasks.simulation.systemverilog'
      }
      {
        match: '\\$(printtimescale|timeformat)\\b'
        name: 'support.function.system-fuctions-tasks.timescale.systemverilog'
      }
      {
        match: '\\$(bitstoreal|realtobits|bitstoshortreal|shortrealtobits|itor|rtoi|signed|unsigned|cast)\\b'
        name: 'support.function.system-fuctions-tasks.conversion.systemverilog'
      }
      {
        match: '\\$(bits|typename|isunbounded)\\b'
        name: 'support.function.system-fuctions-tasks.data-query.systemverilog'
      }
      {
        match: '\\$(unpacked_dimensions|dimensions|left|right|low|high|size|increment)\\b'
        name: 'support.function.system-fuctions-tasks.array-query.systemverilog'
      }
      {
        match: '\\$(clog2|ln|log10|exp|sqrt|pow|floor|ceil|sin|cos|tan|asin|acos|atan|atan2|hypot|sinh|cosh|tanh|asinh|acosh|atanh)\\b'
        name: 'support.function.system-fuctions-tasks.math.systemverilog'
      }
      {
        match: '\\$(countbits|countones|onehot|onehot0|isunknown)\\b'
        name: 'support.function.system-fuctions-tasks.bit-vector.systemverilog'
      }
      {
        match: '\\$(fatal|warning|error|info)\\b'
        name: 'support.function.system-fuctions-tasks.severity.systemverilog'
      }
      {
        match: '\\$assert(on|kill|passon|failon|nonvacuouson|off|control|passoff|failoff|vacuousoff)\\b'
        name: 'support.function.system-fuctions-tasks.assertion.systemverilog'
      }
      {
        match: '\\$(sampled|rose|fell|changed|past_gclk|fell_gclk|changed_gclk|rising_gclk|steady_gclk|stable|past|rose_gclk|future_gclk|stable_gclk|falling_gclk|changing_gclk)\\b'
        name: 'support.function.system-fuctions-tasks.sampled-value.systemverilog'
      }
      {
        match: '\\$(coverage_(control|get_max|merge|get|save)|get_coverage|set_coverage_db_name|load_coverage_name)\\b'
        name: 'support.function.system-fuctions-tasks.coverage.systemverilog'
      }
      {
        match: '\\$(random|dist_(erlang|normal|t|chi_square|exponential|poisson|uniform))\\b'
        name: 'support.function.system-fuctions-tasks.probabilistic-distribution.systemverilog'
      }
      {
        match: '\\$q_(initialize|remove|exam|add|full)\\b'
        name: 'support.function.system-fuctions-tasks.stochastic-analysis.systemverilog'
      }
      {
        match: '\\$(async|sync)\\$(and|nand|or|nor)\\$(plane|array)\\b'
        name: 'support.function.system-fuctions-tasks.PLA-modeling.systemverilog'
      }
      {
        match: '\\$system\\b'
        name: 'support.function.system-fuctions-tasks.miscellaneous.systemverilog'
      }
      {
        match: '\\$((display|strobe|write|monitor)(b|h|o)?|monitor(off|on))\\b'
        name: 'support.function.system-fuctions-tasks.display.systemverilog'
      }
      {
        match: '\\$(fclose|fopen|f(display|strobe|write|monitor)(b|h|o)?|swrite(b|h|o)?|fscanf|fread|fseek|fflush|feof|ferror|ftell|rewind|sscanf|fgets|ungetc|fgetc|sformat|sformatf)\\b'
        name: 'support.function.system-fuctions-tasks.file-io.systemverilog'
      }
      {
        match: '\\$(read|write)mem(b|h)\\b'
        name: 'support.function.system-fuctions-tasks.memory.systemverilog'
      }
      {
        match: '\\$(test|value)\\$plusargs\\b'
        name: 'support.function.system-fuctions-tasks.command-line-input.systemverilog'
      }
      {
        match: '\\$dump(file|off|all|flush|ports(off|all|flush|on|limit)?|limit|vars|on)\\b'
        name: 'support.function.system-fuctions-tasks.VCD.systemverilog'
      }
    ]
  operators:
    patterns: [
      {
        match: '\\+(\\+|=)?|-(>|-|=)?|!=\\?|!={,2}|~(&|\\||\\^)?'
        name: 'keyword.operator.arithmetics.systemverilog'
      }
      {
        match: '&(&|=)?|\\|(\\||=)?|\\^(~|=)?|\\*(\\*|=)?|/=?|%=?|=(=(=|\\?)?)?|(<|>){1,3}=?|<->'
        name: 'keyword.operator.arithmetics.systemverilog'
      }
      {
        match: '\\(|\\)|\\[|\\]|\\{|\\}'
        name: 'keyword.operator.brackets.systemverilog'
      }
    ]
  color_test:
    patterns: [
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_constant_numeric)\\b'
        name: 'constant.numeric'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_constant_language)\\b'
        name: 'constant.language'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_constant_character)\\b'
        name: 'constant.character'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_constant_character_escape)\\b'
        name: 'constant.character.escape'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_constant_other)\\b'
        name: 'constant.other'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_entity_name_function)\\b'
        name: 'entity.name.function'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_entity_name_type)\\b'
        name: 'entity.name.type'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_entity_name_tag)\\b'
        name: 'entity.name.tag'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_entity_name_section)\\b'
        name: 'entity.name.section'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_entity_other_inherited-class)\\b'
        name: 'entity.other.inherited-class'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_entity_other_attribute-name)\\b'
        name: 'entity.other.attribute-name'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_invalid_illegal)\\b'
        name: 'invalid.illegal'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_invalid_deprecated)\\b'
        name: 'invalid.deprecated'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_keyword_control)\\b'
        name: 'keyword.control'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_keyword_operator)\\b'
        name: 'keyword.operator'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_keyword_other)\\b'
        name: 'keyword.other'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_underline)\\b'
        name: 'markup.underline'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_underline_link)\\b'
        name: 'markup.underline.link'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_bold)\\b'
        name: 'markup.bold'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_heading)\\b'
        name: 'markup.heading'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_italic)\\b'
        name: 'markup.italic'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_list)\\b'
        name: 'markup.list'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_quote)\\b'
        name: 'markup.quote'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_raw)\\b'
        name: 'markup.raw'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_markup_other)\\b'
        name: 'markup.other'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_storage_type)\\b'
        name: 'storage.type'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_storage_modifier)\\b'
        name: 'storage.modifier'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_support_function)\\b'
        name: 'support.function'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_support_class)\\b'
        name: 'support.class'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_support_type)\\b'
        name: 'support.type'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_support_constant)\\b'
        name: 'support.constant'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_support_variable)\\b'
        name: 'support.variable'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_support_other)\\b'
        name: 'support.other'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_variable_parameter)\\b'
        name: 'variable.parameter'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_variable_language)\\b'
        name: 'variable.language'
      }
      {
        match: '^\\$\\.\\$\\.\\$\\.\\$(color_test_variable_other)\\b'
        name: 'variable.other'
      }
    ]
